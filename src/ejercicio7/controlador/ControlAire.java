package ejercicio7.controlador;


import ejercicio7.modelo.AireAcondicionado;
import ejercicio7.modelo.RegistroHistorial;
import ejercicio7.modelo.Configuracion;
import ejercicio7.modelo.Sensor;
import ejercicio7.vista.VistaHistorial;
import ejercicio7.vista.VistaSistema;

import java.util.Scanner;

public class ControlAire {
    private Sensor sensor;
    private AireAcondicionado aire;
    private Configuracion config;
    private RegistroHistorial historial;
    private VistaSistema vista;
    private Scanner scanner;

    public ControlAire() {
        this.sensor = new Sensor();
        this.aire = new AireAcondicionado();
        this.config = new Configuracion();
        this.historial = new RegistroHistorial();
        this.vista = new VistaSistema();
        this.scanner = new Scanner(System.in);
    }

    // M√©todo para mostrar el men√∫ de opciones
    public void mostrarMenu() {
        int opcion;
        do {
            System.out.println("\nüìå MEN√ö PRINCIPAL üìå");
            System.out.println("1Ô∏è‚É£ Iniciar Sistema de Aire Acondicionado");
            System.out.println("2Ô∏è‚É£ Modificar Configuraci√≥n de Sensores");
            System.out.println("3Ô∏è‚É£ Ver Historial de Estados");
            System.out.println("4Ô∏è‚É£ Salir");
            System.out.print("üëâ Elige una opci√≥n: ");

            opcion = scanner.nextInt();
            procesarOpcion(opcion);
        } while (opcion != 4);
    }

    // Procesa la opci√≥n elegida por el usuario
    public void procesarOpcion(int opcion) {
        switch (opcion) {
            case 1:
                iniciarSistema();
                break;
            case 2:
                modificarConfiguracion();
                break;
            case 3:
                mostrarHistorial();
                break;
            case 4:
                System.out.println("üëã Saliendo del programa...");
                break;
            default:
                System.out.println("‚ö†Ô∏è Opci√≥n no v√°lida. Int√©ntalo de nuevo.");
        }
    }

    // M√©todo para iniciar el sistema y simular la lectura de sensores
    public void iniciarSistema() {
        System.out.print("¬øDesea ingresar datos manuales? (s/n): ");
        boolean manual = scanner.next().equalsIgnoreCase("s");

        for (int i = 0; i < 5; i++) {
            sensor.actualizarEstado(manual);

            if ((sensor.getTemperatura() > config.getTemperaturaLimite() && sensor.getHumedad() > config.getHumedadLimite()) ||
                    sensor.getTemperatura() > 30) {
                aire.encender();
            } else {
                aire.apagar();
            }

            String estado = aire.isEncendido() ? "Encendido ‚úÖ" : "Apagado ‚ùå";
            historial.agregarRegistro(estado);

            vista.mostrarEstado(sensor.getTemperatura(), sensor.getHumedad(), aire.isEncendido());

            try { Thread.sleep(3000); } catch (InterruptedException e) { e.printStackTrace(); } // 3 seg para prueba
        }
    }

    // M√©todo para modificar los valores de configuraci√≥n
    public void modificarConfiguracion() {
        config.modificarConfiguracion();
        System.out.println("‚úÖ Configuraci√≥n actualizada con √©xito.");
    }

    // M√©todo para mostrar el historial de estados
    public void mostrarHistorial() {
        VistaHistorial vistaHistorial = new VistaHistorial();
        vistaHistorial.mostrarHistorial(historial.obtenerHistorial());
    }
}
